name: Deploy to AWS EC2

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} /bin/bash << 'EOF'
          cd ~/ticha-BE
          git reset --hard
          git pull origin $(git rev-parse --abbrev-ref HEAD)

          # ✅ 기본 명령어 실행 가능하도록 PATH 설정
          export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH"

          # ✅ Poetry 가상환경이 없으면 생성
          if ! poetry env info --path &>/dev/null; then
            echo "Poetry environment not found. Installing dependencies..."
            poetry install
          fi

          # ✅ 명령어 확인 (디버깅용)
          echo "Checking commands..."
          which cat || echo "cat not found"
          which pkill || echo "pkill not found"
          which sleep || echo "sleep not found"
          which ps || echo "ps not found"
          which grep || echo "grep not found"

          # ✅ EC2에 .env 파일 생성 (GitHub Secrets에서 값 가져오기)
          cat <<EOT > .env
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER=${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          MYSQL_PORT=${{ secrets.MYSQL_PORT }}
          MYSQL_HOST=db
          KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}
          KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          ALGORITHM=${{ secrets.ALGORITHM }}
          ENV=production
          EOT

          # ✅ .env 파일 확인
          cat .env

          # ✅ 실행 중인 FastAPI 서버 종료
          pkill -f "uvicorn" || true  # 기존 uvicorn 프로세스 종료

          # ✅ FastAPI 서버 실행 (Poetry 환경 적용)
          nohup poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4 > fastapi.log 2>&1 &

          # ✅ 실행 상태 확인
          sleep 5
          ps aux | grep uvicorn
          EOF